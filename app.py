import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
from scripts import run_bootstrap, run_bayes_scipy, run_bayes_beta, run_metrics_analysis

# Configura√ß√£o da p√°gina
st.set_page_config(
    page_title="Experimentos A/B",
    layout="wide",
    initial_sidebar_state="expanded"
)

# Inicializar tema na sess√£o se n√£o existir
if 'theme' not in st.session_state:
    st.session_state.theme = 'dark'

# Configura√ß√£o global para melhorar a qualidade dos gr√°ficos
plt.rcParams['figure.dpi'] = 150
plt.rcParams['savefig.dpi'] = 150
plt.rcParams['font.size'] = 12
plt.rcParams['axes.labelsize'] = 12
plt.rcParams['axes.titlesize'] = 14
plt.rcParams['xtick.labelsize'] = 10
plt.rcParams['ytick.labelsize'] = 10
plt.rcParams['legend.fontsize'] = 10
plt.rcParams['figure.titlesize'] = 16
plt.style.use('seaborn-v0_8-whitegrid')

# Fun√ß√£o para alternar tema
def toggle_theme():
    st.session_state.theme = 'light' if st.session_state.theme == 'dark' else 'dark'
    st.rerun()

# Aplicar CSS baseado no tema
if st.session_state.theme == 'dark':
    # Tema escuro (padr√£o)
    st.markdown("""
    <style>
        .main-header {
            font-size: 2.5rem;
            color: #00e13a;
            text-align: center;
        }
        .sub-header {
            font-size: 1.8rem;
            color: #0D47A1;
            padding-top: 1rem;
        }
        .method-card {
            background-color: #1E1E1E;
            border-radius: 10px;
            padding: 20px;
            margin-bottom: 20px;
            border: 1px solid #333;
        }
        .sidebar-header {
            font-size: 1.2rem;
            font-weight: bold;
            margin-bottom: 1rem;
        }
        .stButton>button {
            width: 100%;
            margin-bottom: 10px;
            background-color: #00e13a;
            color: white;
        }
        .stButton>button:hover {
            background-color: #00c133;
            color: white;
        }
        .stButton>button:active {
            background-color: #00a52b;
            color: white;
        }
        .stButton>button:focus {
            box-shadow: 0 0 0 0.2rem rgba(0, 225, 58, 0.5);
        }
        .home-button {
            background-color: #00e13a !important;
        }
    </style>
    """, unsafe_allow_html=True)
else:
    # Tema claro
    st.markdown("""
    <style>
        .main-header {
            font-size: 2.5rem;
            color: #008f24;
            text-align: center;
        }
        .sub-header {
            font-size: 1.8rem;
            color: #1976D2;
            padding-top: 1rem;
        }
        .method-card {
            background-color: #f8f9fa;
            border-radius: 10px;
            padding: 20px;
            margin-bottom: 20px;
            border: 1px solid #dee2e6;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        }
        .sidebar-header {
            font-size: 1.2rem;
            font-weight: bold;
            margin-bottom: 1rem;
            color: #333;
        }
        .stButton>button {
            width: 100%;
            margin-bottom: 10px;
            background-color: #008f24;
            color: #ffffff;
        }
        .stButton>button:hover {
            background-color: #007a1f;
            color: #ffffff;
        }
        .stButton>button:active {
            background-color: #006519;
            color: #ffffff;
        }
        .stButton>button:focus {
            box-shadow: 0 0 0 0.2rem rgba(0, 143, 36, 0.5);
        }
        .home-button {
            background-color: #008f24 !important;
        }
        /* Ajustes espec√≠ficos para tema claro */
        .stApp {
            background-color: #ffffff;
        }
        .stMarkdown {
            color: #333333;
        }
        .stExpander {
            border: 1px solid #e6e6e6;
            border-radius: 5px;
        }
        .stDataFrame {
            border: 1px solid #e6e6e6;
        }
        /* Ajustes adicionais para garantir legibilidade no tema claro */
        .stAlert p {
            color: #333333;
        }
        .stAlert a {
            color: #0056b3;
        }
        .stSelectbox label, .stSlider label, .stCheckbox label {
            color: #333333;
        }
        .stFileUploader label {
            color: #333333;
        }
        .stTextInput label {
            color: #333333;
        }
        /* Garantir que textos em bot√µes permane√ßam brancos */
        .stButton>button span {
            color: #ffffff !important;
        }
        /* Ajustar cores de texto em expanders */
        .streamlit-expanderHeader {
            color: #333333;
        }
        .streamlit-expanderContent {
            color: #333333;
        }
    </style>
    """, unsafe_allow_html=True)

# Inicializar estado da sess√£o se n√£o existir
if 'page' not in st.session_state:
    st.session_state.page = 'home'
if 'data' not in st.session_state:
    st.session_state.data = None

# Fun√ß√µes para navega√ß√£o
def go_to_home():
    st.session_state.page = 'home'

def go_to_bootstrap():
    st.session_state.page = 'bootstrap'

def go_to_bayes_scipy():
    st.session_state.page = 'bayes_scipy'

def go_to_bayes_beta():
    st.session_state.page = 'bayes_beta'

def go_to_metrics_analysis():
    st.session_state.page = 'metrics_analysis'

# Cabe√ßalho principal
st.markdown('<div class="main-header">An√°lises de Experimentos A/B</div>', unsafe_allow_html=True)
st.caption("Developed by LF Corporations")

# Barra lateral com navega√ß√£o
st.sidebar.markdown('<div class="sidebar-header"></div>', unsafe_allow_html=True)

# Seletor de tema
# theme_label = "üåô Tema Escuro" if st.session_state.theme == 'dark' else "‚òÄÔ∏è Tema Claro"
#if st.sidebar.button(theme_label, help="Alternar entre tema claro e escuro"):
    #toggle_theme()

# Bot√£o Home sempre vis√≠vel
if st.sidebar.button("üè† Home", key="home_btn", help="Voltar para a p√°gina inicial"):
    go_to_home()

# Menu de an√°lises sempre vis√≠vel, mas bot√µes desabilitados se n√£o houver dados
st.sidebar.markdown('<div class="sidebar-header">üß™ Escolha uma an√°lise:</div>', unsafe_allow_html=True)

# Verifica se h√° dados carregados
dados_carregados = st.session_state.data is not None

# Bot√µes de an√°lise (desabilitados se n√£o houver dados)
if st.sidebar.button("üìà Bootstrapping Di√°rio", key="bootstrap_btn", 
                    disabled=not dados_carregados,
                    help="Carregue dados primeiro" if not dados_carregados else "An√°lise com bootstrapping"):
    go_to_bootstrap()
    
if st.sidebar.button("üìâ Bayesiano com Beta (RPV Escalado)", key="bayes_scipy_btn", 
                    disabled=not dados_carregados,
                    help="Carregue dados primeiro" if not dados_carregados else "An√°lise bayesiana com escalonamento"):
    go_to_bayes_scipy()
    
if st.sidebar.button("üßÆ Bayesiano", key="bayes_beta_btn", 
                    disabled=not dados_carregados,
                    help="Carregue dados primeiro" if not dados_carregados else "An√°lise bayesiana simples"):
    go_to_bayes_beta()

if st.sidebar.button("üìä M√©tricas B√°sicas", key="metrics_btn", 
                    disabled=not dados_carregados,
                    help="Carregue dados primeiro" if not dados_carregados else "An√°lise de m√©tricas b√°sicas"):
    go_to_metrics_analysis()

# Adicionar mensagem informativa quando n√£o houver dados
if not dados_carregados:
    st.sidebar.info("‚ö†Ô∏è Fa√ßa upload de dados na p√°gina inicial para habilitar as an√°lises")

# P√°gina Home
if st.session_state.page == 'home':
    # Instru√ß√µes
    with st.expander("‚ÑπÔ∏è Como usar esta ferramenta", expanded=False):
        st.markdown("""
        1. Fa√ßa upload de um arquivo Excel contendo as colunas: `data`, `variante`, `receita`, `sessoes`
        2. Selecione um m√©todo de an√°lise no menu lateral
        3. Visualize os resultados e interpreta√ß√µes para o m√©todo escolhido
        
        **Formato esperado do arquivo:**
        - `data`: Data da observa√ß√£o (AAAA-MM-DD)
        - `variante`: Nome da variante ("Controle" ou "Nova")
        - `receita`: Valor da receita gerada (Apenas n√∫meros)
        - `sessoes`: N√∫mero de sess√µes/visitas
        """)

    # Upload de arquivo
    uploaded_file = st.file_uploader("üìÇ Envie o arquivo Excel com colunas: data, variante, receita, sessoes", 
                                    type=["xlsx", "xls"])

    if uploaded_file:
        df = pd.read_excel(uploaded_file)
        st.session_state.data = df
        
        # Exibir preview dos dados
        st.markdown('<div class="sub-header">üîç Preview dos dados carregados</div>', unsafe_allow_html=True)
        st.dataframe(df.head(10), height=300)
        st.info(f"Total de {len(df)} registros carregados.")
        
        # Instru√ß√µes para continuar
        st.success("‚úÖ Dados carregados com sucesso! Selecione um m√©todo de an√°lise no menu lateral.")
        
        # For√ßa o rerun da aplica√ß√£o para atualizar os bot√µes na sidebar
        st.rerun()

# P√°gina Bootstrapping
elif st.session_state.page == 'bootstrap':
    st.markdown('<div class="sub-header">üìä Resultado Bootstrapping Di√°rio</div>', unsafe_allow_html=True)
    
    # Expander logo ap√≥s o t√≠tulo
    with st.expander("‚ÑπÔ∏è Como o c√°lculo foi feito", expanded=False):
        st.markdown("""
        ### Metodologia de Bootstrapping Di√°rio
        
        1. **C√°lculo do RPV**: Para cada dia e variante, calculamos a Receita Por Visita (RPV = receita / sess√µes)
        
        2. **Bootstrapping**: Realizamos 10.000 reamostragens com reposi√ß√£o dos valores di√°rios de RPV para cada variante
        
        3. **Intervalos de Confian√ßa**: Calculamos o intervalo de confian√ßa de 90% para a m√©dia do RPV de cada variante
        
        4. **Diferen√ßa**: Calculamos a diferen√ßa entre as m√©dias de RPV das variantes em cada amostra bootstrap
        
        5. **P-valor**: Estimamos o p-valor como a propor√ß√£o de amostras onde a diferen√ßa √© menor que zero
        
        6. **Lift**: Calculamos o lift percentual como (RPV_nova / RPV_controle - 1) * 100
        
        Esta abordagem √© robusta a outliers e n√£o assume normalidade dos dados, sendo ideal para an√°lises de testes A/B com dados di√°rios.
        """)
    
    # Conte√∫do da an√°lise
    with st.container():
        run_bootstrap(st.session_state.data)
        
        st.markdown("""
        üîç **O que foi feito?** A an√°lise de bootstrapping calcula a m√©dia da receita por visita (RPV) para cada grupo
        com simula√ß√µes aleat√≥rias para gerar um intervalo de confian√ßa de 90%.

        ‚úÖ Indica se a nova variante tem desempenho superior, inferior ou se o resultado √© inconclusivo.
        """)

# P√°gina Bayes Scipy
elif st.session_state.page == 'bayes_scipy':
    st.markdown('<div class="sub-header">üìä Resultado Bayesiano com Beta (RPV Escalado)</div>', unsafe_allow_html=True)
    
    # Expander logo ap√≥s o t√≠tulo
    with st.expander("‚ÑπÔ∏è Como o c√°lculo foi feito", expanded=False):
        st.markdown("""
        ### Metodologia Bayesiana com Distribui√ß√£o Beta (RPV Escalado)
        
        1. **C√°lculo do RPV**: Para cada dia e variante, calculamos a Receita Por Visita (RPV = receita / sess√µes)
        
        2. **Normaliza√ß√£o**: Escalamos os valores de RPV para o intervalo [0,1] para adequa√ß√£o √† distribui√ß√£o Beta
        
        3. **Prior Bayesiano**: Utilizamos uma distribui√ß√£o Beta(2,2) como prior n√£o-informativo
        
        4. **Posterior**: Calculamos a distribui√ß√£o posterior combinando o prior com os dados observados
        
        5. **Simula√ß√£o Monte Carlo**: Geramos 10.000 amostras da distribui√ß√£o posterior para cada variante
        
        6. **Probabilidade**: Calculamos a probabilidade da variante Nova ser melhor que o Controle como a propor√ß√£o de amostras onde Nova > Controle
        
        7. **Reescalamento**: Convertemos os resultados de volta para a escala original de RPV
        
        Esta abordagem bayesiana permite quantificar diretamente a probabilidade de uma variante ser superior √† outra, incorporando incerteza de forma natural.
        """)
    
    # Conte√∫do da an√°lise
    with st.container():
        run_bayes_scipy(st.session_state.data)
        
        st.markdown("""
        üîç **O que foi feito?** A an√°lise bayesiana utiliza distribui√ß√µes beta para modelar a incerteza sobre a RPV,
        calculando a probabilidade da nova variante ser melhor que o controle.

        ‚úÖ Fornece uma estimativa da probabilidade de superioridade e recomenda√ß√£o baseada em evid√™ncia bayesiana.
        """)

# P√°gina Bayes Beta
elif st.session_state.page == 'bayes_beta':
    st.markdown('<div class="sub-header">üìä Resultado Bayesiano</div>', unsafe_allow_html=True)
    
    # Expander logo ap√≥s o t√≠tulo
    with st.expander("‚ÑπÔ∏è Como o c√°lculo foi feito", expanded=False):
        st.markdown("""
        ### Metodologia Bayesiana com Distribui√ß√£o Normal
        
        1. **C√°lculo do RPV**: Para cada dia e variante, calculamos a Receita Por Visita (RPV = receita / sess√µes)
        
        2. **Modelagem Bayesiana**: Assumimos que o RPV m√©dio de cada variante segue uma distribui√ß√£o Normal
        
        3. **Prior**: Utilizamos priors baseados nos dados observados, com m√©dia igual √† m√©dia amostral e desvio padr√£o proporcional ao erro padr√£o
        
        4. **Simula√ß√£o Monte Carlo**: Geramos 10.000 amostras da distribui√ß√£o posterior para cada variante
        
        5. **Probabilidade**: Calculamos a probabilidade da variante Nova ser melhor que o Controle como a propor√ß√£o de amostras onde Nova > Controle
        
        6. **Intervalo de Credibilidade**: Calculamos o intervalo de 90% de credibilidade para o RPV de cada variante
        
        Esta abordagem bayesiana √© mais direta que a vers√£o com Beta e n√£o requer normaliza√ß√£o dos dados, sendo adequada quando os valores de RPV seguem aproximadamente uma distribui√ß√£o normal.
        """)
    
    # Conte√∫do da an√°lise
    with st.container():
        run_bayes_beta(st.session_state.data)
        
        st.markdown("""
        üîç **O que foi feito?** A an√°lise bayesiana com distribui√ß√£o normal modela diretamente a receita por visita,
        calculando a probabilidade da nova variante ser melhor que o controle.

        ‚úÖ Fornece uma estimativa da probabilidade de superioridade e recomenda√ß√£o baseada em evid√™ncia bayesiana.
        """)

# P√°gina M√©tricas B√°sicas
elif st.session_state.page == 'metrics_analysis':
    st.markdown('<div class="sub-header">üìä M√©tricas B√°sicas</div>', unsafe_allow_html=True)
    
    # Expander logo ap√≥s o t√≠tulo
    with st.expander("‚ÑπÔ∏è Como o c√°lculo foi feito", expanded=False):
        st.markdown("""
        ### Metodologia de An√°lise de M√©tricas B√°sicas
        
        1. **Agrega√ß√£o de Dados**: Agrupamos os dados por variante para calcular m√©tricas globais
        
        2. **M√©tricas Calculadas**:
           - **RPV (Receita Por Visita)**: M√©dia da receita dividida pelo n√∫mero de sess√µes
           - **Sess√µes**: Total de sess√µes por variante
           - **Receita Total**: Soma da receita por variante
           - **Dias de Teste**: N√∫mero de dias √∫nicos no conjunto de dados
        
        3. **Evolu√ß√£o Temporal**: Calculamos as m√©tricas por dia para visualizar tend√™ncias ao longo do tempo
        
        4. **Compara√ß√£o Simples**: Calculamos o lift percentual como (M√©trica_nova / M√©trica_controle - 1) * 100
        
        5. **Sample Ratio Mismatch (SRM)**:
           - Verificamos se a distribui√ß√£o de tr√°fego entre as variantes est√° conforme o esperado (geralmente 50/50)
           - Calculamos a propor√ß√£o observada de sess√µes para cada variante
           - Realizamos um teste binomial para verificar se a diferen√ßa entre a propor√ß√£o observada e a esperada √© estatisticamente significativa
           - Um p-valor < 0.05 indica que a distribui√ß√£o n√£o √© aleat√≥ria, sugerindo um problema na aloca√ß√£o de tr√°fego que pode comprometer os resultados do teste
        
        Esta an√°lise fornece uma vis√£o geral descritiva do desempenho das variantes, sem infer√™ncia estat√≠stica avan√ßada, sendo √∫til para uma primeira avalia√ß√£o dos resultados do teste.
        """)
    
    # Conte√∫do da an√°lise
    with st.container():
        run_metrics_analysis(st.session_state.data)
        
        st.markdown("""
        üîç **O que foi feito?** An√°lise das m√©tricas b√°sicas do teste, incluindo receita por sess√£o,
        taxa de convers√£o e evolu√ß√£o di√°ria dos indicadores.

        ‚úÖ Fornece uma vis√£o geral do desempenho das variantes sem infer√™ncia estat√≠stica avan√ßada.
        """)
